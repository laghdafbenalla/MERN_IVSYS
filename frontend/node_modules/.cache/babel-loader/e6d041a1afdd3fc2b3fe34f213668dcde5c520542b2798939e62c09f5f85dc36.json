{"ast":null,"code":"// frontend/src/components/Auth/PrivateRoute.js\nimport React,{useEffect,useState}from\"react\";import{Redirect,Route}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";const PrivateRoute=_ref=>{let{component:Component,...rest}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const[loading,setLoading]=useState(true);useEffect(()=>{const checkAuthentication=async()=>{try{const response=await fetch(\"/user/profile\",{method:\"GET\",headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(localStorage.getItem(\"token\"))}});if(response.ok){setIsAuthenticated(true);}else{setIsAuthenticated(false);}}catch(error){console.error(\"Authentication check error:\",error);setIsAuthenticated(false);}finally{setLoading(false);}};checkAuthentication();},[]);return/*#__PURE__*/_jsx(Route,{...rest,render:props=>loading?/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}):isAuthenticated?/*#__PURE__*/_jsx(Component,{...props}):/*#__PURE__*/_jsx(Redirect,{to:\"/login\"})});};export default PrivateRoute;","map":{"version":3,"names":["React","useEffect","useState","Redirect","Route","jsx","_jsx","PrivateRoute","_ref","component","Component","rest","isAuthenticated","setIsAuthenticated","loading","setLoading","checkAuthentication","response","fetch","method","headers","Authorization","concat","localStorage","getItem","ok","error","console","render","props","children","to"],"sources":["/Users/laghdaf/Documents/ALX/frontend/src/components/Auth/PrivateRoute.js"],"sourcesContent":["// frontend/src/components/Auth/PrivateRoute.js\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const checkAuthentication = async () => {\n      try {\n        const response = await fetch(\"/user/profile\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        });\n\n        if (response.ok) {\n          setIsAuthenticated(true);\n        } else {\n          setIsAuthenticated(false);\n        }\n      } catch (error) {\n        console.error(\"Authentication check error:\", error);\n        setIsAuthenticated(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkAuthentication();\n  }, []);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        loading ? (\n          <div>Loading...</div>\n        ) : isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,QAAQ,CAAEC,KAAK,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnD,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAAuC,IAAtC,CAAEC,SAAS,CAAEC,SAAS,CAAE,GAAGC,IAAK,CAAC,CAAAH,IAAA,CACrD,KAAM,CAACI,eAAe,CAAEC,kBAAkB,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACY,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAE5CD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAe,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACtC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,eAAe,CAAE,CAC5CC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClCC,aAAa,WAAAC,MAAA,CAAYC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACxD,CACF,CAAC,CAAC,CAEF,GAAIP,QAAQ,CAACQ,EAAE,CAAE,CACfZ,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CAAC,IAAM,CACLA,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAE,MAAOa,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnDb,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CAAC,OAAS,CACRE,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDC,mBAAmB,CAAC,CAAC,CACvB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEV,IAAA,CAACF,KAAK,KACAO,IAAI,CACRiB,MAAM,CAAGC,KAAK,EACZf,OAAO,cACLR,IAAA,QAAAwB,QAAA,CAAK,YAAU,CAAK,CAAC,CACnBlB,eAAe,cACjBN,IAAA,CAACI,SAAS,KAAKmB,KAAK,CAAG,CAAC,cAExBvB,IAAA,CAACH,QAAQ,EAAC4B,EAAE,CAAC,QAAQ,CAAE,CAE1B,CACF,CAAC,CAEN,CAAC,CAED,cAAe,CAAAxB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}